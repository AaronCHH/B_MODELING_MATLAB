%% MATLAB Recipes for Earth Sciences - Chapter 9%% Section 9.2clear%%rng(0)s1 = 10*randn(30,1);s2 =  7*randn(30,1);s3 = 12*randn(30,1);%%x(:,1) =  15.4+ 7.2*s1+10.5*s2+2.5*s3;x(:,2) = 124.0-8.73*s1+ 0.1*s2+2.6*s3;x(:,3) = 100.0+5.25*s1- 6.5*s2+3.5*s3;%%x = x + 3.8*randn(size(x));%%save sediments_1.txt x -ascii%%clear%%x = load('sediments_1.txt');%%subplot(1,3,1), histogram(x(:,1))subplot(1,3,2), histogram(x(:,2))subplot(1,3,3), histogram(x(:,3))%%plot(x(:,1:3)), gridlegend('Min1','Min2','Min3')xlabel('Sample ID')ylabel('Quantity')%%for i = 1 : 30   samples(i,:) = [sprintf('%02.0f',i)];endminerals = ['Min1';'Min2';'Min3'];%%subplot(1,3,1),plot(x(:,1),x(:,2),'o')xlabel('Mineral 1')ylabel('Mineral 2')subplot(1,3,2),plot(x(:,1),x(:,3),'o')xlabel('Mineral 1')ylabel('Mineral 3')subplot(1,3,3),plot(x(:,2),x(:,3),'o')xlabel('Mineral 2')ylabel('Mineral 3')%%corrmatrix = corrcoef(x);corrmatrix = flipud(corrmatrix);%%imagesc(corrmatrix), colormap(hot), caxis([-1 1])title('Correlation Matrix')axis square, colorbar, holdset(gca,'XTick',[1 2 3],...   'XTickLabel',minerals,...   'YTick',[1 2 3],...   'YTickLabel',flipud(minerals))%%[pcs,newx,variances] = pca(x);%%pcs(:,1:3)%%subplot(1,3,1)plot(1:3,pcs(:,1),'o'), axis([0.5 3.5 -1 1])text((1:3)+0.2,pcs(:,1),minerals,'FontSize',14), holdplot(0.5:3.5,zeros(4,1),'r'), title('PC 1')subplot(1,3,2)plot(1:3,pcs(:,2),'o'), axis([0.5 3.5 -1 1])text((1:3)+0.2,pcs(:,2),minerals,'FontSize',14), holdplot(0.5:3.5,zeros(4,1),'r'), title('PC 2')subplot(1,3,3)plot(1:3,pcs(:,3),'o'), axis([0.5 3.5 -1 1])text((1:3)+0.2,pcs(:,3),minerals,'FontSize',14), holdplot(0.5:3.5,zeros(4,1),'r'), title('PC 3')%%plot(pcs(:,1),pcs(:,2),'o'), hold ontext(pcs(:,1)+0.02,pcs(:,2),minerals,'FontSize',14)plot([-1 1],[0 0],'r')plot([0 0],[-1 1],'r')xlabel('First Principal Component Loads')ylabel('Second Principal Component Loads')hold off%%plot(newx(:,1),newx(:,2),'+'), hold ontext(newx(:,1)+2,newx(:,2),samples,'FontSize',14)plot([-400 400],[0 0],'r')plot([0 0],[-150 300],'r')xlabel('First Principal Component Scores')ylabel('Second Principal Component Scores')hold off%%percent_explained = 100*variances/sum(variances)%%corrcoef(newx(:,1),newx(:,2))%%plot(1:30,newx(:,1),1:30,newx(:,2))grid, legend('PC1','PC2')xlabel('Sample ID'), ylabel('Value')%%rng(0)s1 = 10*randn(30,1);s2 =  7*randn(30,1);s3 = 12*randn(30,1);%%subplot(3,1,1)plotyy(1:30,newx(:,1),1:30,s1), title('PC1')subplot(3,1,2)plotyy(1:30,-newx(:,2),1:30,s2), title('PC2')subplot(3,1,3)plotyy(1:30,newx(:,3),1:30,s3), title('PC3')%% Section 9.3rng(0)s1 = 10*rand(30,1);s2 =  7*rand(30,1);s3 = 12*rand(30,1);%%x(:,1) =  15.4+ 7.2*s1+10.5*s2+2.5*s3;x(:,2) = 124.0-8.73*s1+ 0.1*s2+2.6*s3;x(:,3) = 100.0+5.25*s1- 6.5*s2+3.5*s3;x = x + 3.8*randn(size(x));%%save sediments_2.txt x -ascii%%clear%%x = load('sediments_2.txt');%%subplot(1,3,1), histogram(x(:,1))subplot(1,3,2), histogram(x(:,2))subplot(1,3,3), histogram(x(:,3))%%plot(x(:,1:3)), gridlegend('Min1','Min2','Min3')xlabel('Sample ID')ylabel('Quantity')%%[pcs,newx,variances] = pca(x);newx = newx./repmat(std(newx),length(newx),1);%%a_pca = pcs*sqrt(diag(variances));w_pca = inv(sqrt(diag(variances)))*pcs';%%rng(0)%%B = orth(rand(3,3)-0.5);BOld = zeros(size(B));%%div = 0;%%while (1-div) > eps   B = B*real(inv(B'*B)^(1/2));   div = min(abs(diag(B'*BOld)));   BOld = B;   B = (newx'*(newx*B).^3)/length(newx)-3*B;   sica = newx*B;end%%rng(0)s1 = 10*rand(30,1);s2 =  7*rand(30,1);s3 = 12*rand(30,1);%%subplot(3,1,1)plotyy(1:30,-sica(:,3),1:30,s1)title('IC1')subplot(3,1,2)plotyy(1:30,sica(:,2),1:30,s2)title('IC2')subplot(3,1,3)plotyy(1:30,sica(:,1),1:30,s3)title('IC3')%%a_ica = a_pca*B;w_ica = B'*w_pca;%% Section 9.4clear%%rng(0)%%data1 = randn(60,2);data1(:,1) = 3.4 + 1.2*data1(:,1);data1(:,2) = 1.7 + 0.4*data1(:,2);%%data2 = randn(60,2);data2(:,1) = 5.5 + 1.8*data2(:,1);data2(:,2) = 2.9 + 0.6*data2(:,2);%%data3 = randn(60,2);data3(:,1) = 3+ 1.8*data2(:,1);data3(:,2) = 0.3 + 1.2*data2(:,2);%%classes(1:60,1:9) = repmat('Granite_1',60,1);classes(61:120,1:9) = repmat('Granite_2',60,1);classes(121:180,1:9) = repmat('Granite_3',60,1);%%data = [data1;data2;data3];%%save granite.mat%%clear%%load granite.mat%%cls = ClassificationDiscriminant.fit(data,classes);%%cls%%K1 = cls.Coeffs(2,3).Const;L1 = cls.Coeffs(2,3).Linear;K2 = cls.Coeffs(1,2).Const;L2 = cls.Coeffs(1,2).Linear;%%Mu1 = cls.Mu(1,:);Mu2 = cls.Mu(2,:);Mu3 = cls.Mu(3,:);%%h1 = axes('XLim',[-5 25],'YLim',[0 5],'Box','On')hold online(data1(:,1),data1(:,2),...    'Marker','.','MarkerSize',8,...    'LineStyle','None','MarkerEdgeColor','r')line(data2(:,1),data2(:,2),...    'Marker','.','MarkerSize',8,...    'LineStyle','None','MarkerEdgeColor','b')line(data3(:,1),data3(:,2),...    'Marker','.','MarkerSize',8,...    'LineStyle','None','MarkerEdgeColor','m')line(Mu1(:,1),Mu1(:,2),...    'Marker','o','MarkerEdgeColor','k',...    'MarkerSize',8,'MarkerFaceColor','k')line(Mu2(:,1),Mu2(:,2),...    'Marker','o','MarkerEdgeColor','k',...    'MarkerSize',8,'MarkerFaceColor','k')line(Mu3(:,1),Mu3(:,2),...    'Marker','o','MarkerEdgeColor','k',...    'MarkerSize',8,'MarkerFaceColor','k')h2 = legend('Granite 1','Granite 2','Granite 3',...    'Location','SouthEast');set(h2,'Box','Off')f1 = @(x1,x2) K1 + L1(1)*x1 + L1(2)*x2;h3 = ezplot(f1,[-5 12 0 5]);set(h3,'Color','k')f2 = @(x1,x2) K2 + L2(1)*x1 + L2(2)*x2;h4 = ezplot(f2,[-5 10 0 5]);set(h4,'Color','k')title('Discriminant Analysis')hold off%%h1 = axes('XLim',[-5 25],'YLim',[0 5],'Box','On')hold online(5.2,3.5,...    'Marker','o','MarkerEdgeColor','b',...    'MarkerSize',8,'MarkerFaceColor','b')f1 = @(x1,x2) K1 + L1(1)*x1 + L1(2)*x2;h3 = ezplot(f1,[-5 12 0 5]);set(h3,'Color','k')f2 = @(x1,x2) K2 + L2(1)*x1 + L2(2)*x2;h3 = ezplot(f2,[-5 10 0 5]);set(h3,'Color','k')text(0,2,'Granite 1','Color','r')text(-0.5,4,'Granite 2','Color','b')text(10,4.5,'Granite 3','Color','m')title('Discriminant Analysis')hold off%% Section 9.5clear%%data = load('sediments_3.txt');Y = pdist(data);%%imagesc(squareform(Y)), colormap(hot)title('Euclidean distance between pairs of samples')xlabel('First Sample No.')ylabel('Second Sample No.')colorbar%%Z = linkage(Y)%%dendrogram(Z);xlabel('Sample No.')ylabel('Distance')box on%%cophenet(Z,Y)%% Section 9.6clear%%rng(0)data(:,1) = 0.3 + 0.03*randn(50,1);data(:,2) = 0.2 + 0.01*randn(50,1);data(:,3) =     0.2 ...            -  52.0*data(:,1) ...            + 276.0*data(:,2);        %%        for i = 1 : size(data,1)    samples(i,:) = [sprintf('%02.0f',i)];end%%            variables = ['Var1';             'Var2';             'Var3'];            %%beta = fitlm(data(:,1:2),data(:,3),...    'ResponseVar',variables(3,:),...    'PredictorVars',variables(1:2,:)) %%[Var1,Var2] = meshgrid(0.20:0.01:0.45,0.17:0.01:0.23);Var3 = beta.Coefficients.Estimate(1) + ...       beta.Coefficients.Estimate(2)*Var1 + ...       beta.Coefficients.Estimate(3)*Var2;%%surf(Var1,Var2,Var3,'FaceAlpha',0.2), hold online(data(:,1), data(:,2), data(:,3),...     'LineStyle','none',...     'Marker','.',...     'MarkerSize',30)grid onview(70,30)hold off%%clear%%rng(0)data(:,1) = 0.3 + 0.03*randn(50,1);data(:,2) = 0.2 + 0.01*randn(50,1);data(:,3) =     0.2 ...            -  52.0*data(:,1) ...            + 276.0*data(:,2) ...            +   2.2*randn(50,1);        %%        for i = 1 : size(data,1)    samples(i,:) = [sprintf('%02.0f',i)];end%%            variables = ['Var1';             'Var2';             'Var3'];        %%beta = fitlm(data(:,1:2),data(:,3),...    'ResponseVar',variables(3,:),...    'PredictorVars',variables(1:2,:)) %%[Var1,Var2] = meshgrid(0.20:0.01:0.45,0.17:0.01:0.23);Var3 = beta.Coefficients.Estimate(1) + ...       beta.Coefficients.Estimate(2)*Var1 + ...       beta.Coefficients.Estimate(3)*Var2;%%surf(Var1,Var2,Var3,'FaceAlpha',0.2), hold online(data(:,1), data(:,2), data(:,3),...     'LineStyle','none',...     'Marker','.',...     'MarkerSize',30)grid onview(70,30)hold off%%clear%%data = load('sherwoodsandstone.txt');%%fid = fopen('sherwoodsandstone_samples.txt');samples = textscan(fid,'%s','Headerlines',8);fclose(fid);%%variables = ['Perm';             'Poro';             'MaCo';             'TrFF';             'InPo'];%%rng(0)for i = 1:size(data,2)    rcolor = rand(1,3);    line(log(data(:,i)),1:40,...        'Marker','Square','MarkerEdgeColor',rcolor,...        'MarkerSize',8,'MarkerFaceColor',rcolor,...        'LineStyle',':','Color',rcolor)    text(log(data(:,i))+0.1,1:40,samples{1})end    legend(variables)xlabel('Log of Physical Parameters')%%beta = fitlm(data(:,2:5),data(:,1),...    'ResponseVar',variables(1,:),...    'PredictorVars',variables(2:5,:))%%plotDiagnostics(beta,'leverage')%%edit LinearModel.fit%%size(data,2)/size(data,1)%%samples{1}(11)samples{1}(22)%%3*mean(beta.Diagnostics.CooksDistance)%%plotDiagnostics(beta,'cookd')%%plotResiduals(beta)%%plotResiduals(beta,'probability')%%plotSlice(beta)